PROJECT(TP_C_Cpp_HW2 C)
CMAKE_MINIMUM_REQUIRED(VERSION 3.10.2)
SET(CMAKE_C_STANDARD 11)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror")

if(ENABLE_COVERAGE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g ")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fprofile-arcs")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ftest-coverage")
    set(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -g ")
    set(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -O0")
    set(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -fprofile-arcs")
    set(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -ftest-coverage")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} --coverage")
endif()

INCLUDE_DIRECTORIES(project/include)

IF(IS_SINGLE_THREAD OR (NOT IS_SINGLE_THREAD AND NOT IS_MULTI_THREAD))
    ADD_LIBRARY(sequence_search_static STATIC project/src/seq_search_st.c project/include/search.h project/src/search.c project/include/search_st.h project/src/search_st.c)
ENDIF()
IF(IS_MULTI_THREAD OR (NOT IS_SINGLE_THREAD AND NOT IS_MULTI_THREAD))
    ADD_LIBRARY(sequence_search_dynamic SHARED project/src/seq_search_mt.c project/include/search.h project/src/search.c project/include/search_mt.h project/src/search_mt.c)
    TARGET_LINK_LIBRARIES(sequence_search_dynamic pthread)
ENDIF()

ENABLE_TESTING()
ADD_SUBDIRECTORY(project/testing)